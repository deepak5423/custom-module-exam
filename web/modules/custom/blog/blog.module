<?php 
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_HOOK() for node templates.
 */
function blog_preprocess_node(&$variables) {
    if ($variables['node']->getType() === 'blog') {
      $body = $variables['node']->get('body')->value;
      $words = explode(' ', $body);
      $short_text = implode(' ', array_slice($words, 0, 50));
      $full_text = implode(' ', array_slice($words, 50));
  
      $variables['short_text'] = $short_text;
      $variables['full_text'] = $full_text;
    }
}

/**
 * Implements hook_preprocess_HOOK() for menu link templates.
 */
function blog_preprocess_menu_link(array &$variables) {
    dd($variables['menu_name']);
    if ($variables['menu_name'] == 'your_custom_menu' && $variables['link']['link_path'] == '/user/register') {
        // Change the menu item title.
        $variables['link']['title'] = 'Register Now';
    }
}

/**
 * Implements hook_form_FORM_ID_alter() for the user registration form.
 */
function blog_form_user_register_form_alter(&$form, &$form_state, $form_id) {
    // Add a password field to the user registration form.
    $form['account']['full_name'] = [
      '#type' => 'TextField',
      '#title' => t('Full Name'),
      '#required' => TRUE,
      '#placeholder' => t('Full Name'),
  ];
    $form['account']['pass'] = [
        '#type' => 'password_confirm',
        '#title' => t('Password'),
        '#required' => TRUE,
    ];
}

/**
 * Implements hook_form_alter().
 */
function blog_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'user_register_form') {
    // Add a custom submit handler to the registration form.
    $form['#submit'][] = 'custom_registration_thankyou_submit';
  }
}

/**
 * Custom submit handler for the registration form.
 */
function custom_registration_thankyou_submit(&$form, FormStateInterface $form_state) {
  // Send a thank-you email to the user.
  $email = $form_state->getValue('mail');
  custom_registration_thankyou_send_email($email);
}

/**
 * Function to send the thank-you email.
 */
function custom_registration_thankyou_send_email($email) {
  // Customize the email subject and message as needed.
  $params = [
    'subject' => 'Thank You for Registering',
    'body' => 'Thank you for your submission. We will get back to you soon.',
  ];

  // Send the email.
  \Drupal::service('plugin.manager.mail')->mail(
    'custom_registration_thankyou',
    'registration_thankyou',
    $email,
    \Drupal::languageManager()->getDefaultLanguage()->getId(),
    $params
  );
}

?>
